tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_tmax = mean(rowMeans(select(., -date), na.rm = TRUE), na.rm = TRUE))
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_tmax > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Merge with all year-month combinations for completeness
all_months <- expand.grid(year_month = unique(daily_avg_temp$year_month), days_above_32 = 0)
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Merge with all year-month combinations for completeness
all_months <- expand.grid(year_month = unique(daily_avg_tmax$year_month), days_above_32 = 0)
days_above_32 <- merge(all_months, days_above_32, all.x = TRUE)
# Fill NA with 0
days_above_32[is.na(days_above_32)] <- 0
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
# Define regions (you'll need grid point coordinates for this step)
regions <- list(
North = list(lat_range = c(-5, 5), lon_range = c(-75, -60)),
Northeast = list(lat_range = c(-5, -15), lon_range = c(-50, -35)),
Southeast = list(lat_range = c(-23, -20), lon_range = c(-50, -40)),
South = list(lat_range = c(-30, -25), lon_range = c(-60, -50)),
CentralWest = list(lat_range = c(-20, -10), lon_range = c(-60, -50))
)
# Loop through each region and perform the analysis
region_results <- list()
for (region in names(regions)) {
lat_range <- regions[[region]]$lat_range
lon_range <- regions[[region]]$lon_range
# Filter grid points that fall within the region (you'll need to filter `tmax_df`)
# Repeat calculations for each region similar to the national average
region_avg_tmax <- ... # Your calculation for each region here
region_days_above_32 <- ... # Your calculation for days above 32C for the region
# Store results
region_results[[region]] <- region_days_above_32
}
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- weather_data %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(avg_tmax, na.rm = TRUE)) %>%
ungroup()
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- region_data %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(avg_tmax, na.rm = TRUE)) %>%
ungroup()
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- temperature_states %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(avg_tmax, na.rm = TRUE)) %>%
ungroup()
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- temperature_states %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(mean_tmax, na.rm = TRUE)) %>%
ungroup()
regional_analysis <- regional_avg_tmax %>%
mutate(year_month = format(date, "%Y-%m")) %>%
group_by(region, year_month) %>%
summarise(days_above_32C = sum(avg_tmax > 32, na.rm = TRUE)) %>%
ungroup()
# Regression for each region
results <- list()
for (region in unique(regional_analysis$region)) {
region_data <- regional_analysis %>%
filter(region == !!region) %>%
mutate(year = year(ymd(paste0(year_month, "-01"))),
month = month(ymd(paste0(year_month, "-01"))))
# Regression with month fixed effects
model <- feols(days_above_32C ~ year | month, data = region_data)
results[[region]] <- summary(model)
}
# Check results for each region
print(region_results)
View(results_by_region)
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- temperature_states %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(mean_tmax, na.rm = TRUE)) %>%
regional_analysis <- regional_avg_tmax %>%
mutate(year_month = format(date, "%Y-%m")) %>%
group_by(region, year_month) %>%
summarise(days_above_32C = sum(avg_tmax > 32, na.rm = TRUE)) %>%
# Regression for each region
results <- list()
View(regression_model)
View(results_by_region)
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- temperature_states %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(mean_tmax, na.rm = TRUE)) %>%
regional_analysis <- regional_avg_tmax %>%
mutate(year_month = format(date, "%Y-%m")) %>%
group_by(region, year_month) %>%
summarise(days_above_32C = sum(avg_tmax > 32, na.rm = TRUE)) %>%
# Regression for each region
results <- list()
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_avg_tmax <- temperature_states %>%
group_by(date, region) %>%
summarise(avg_tmax = mean(mean_tmax, na.rm = TRUE)) %>%
regional_analysis <- regional_avg_tmax %>%
mutate(year_month = format(date, "%Y-%m")) %>%
group_by(region, year_month) %>%
summarise(days_above_32C = n()) %>%
# Regression for each region
results <- list()
View(regression_model)
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
# Step 4: Repeat the analysis for each region
results_by_region = lapply(unique(temperature_states$region), function(reg) {
# Filter the data for the specific region
region_data = temperature_states %>%
filter(region == reg)  # Keep only the rows for the current region
# Calculate the average daily temperature for the region
region_avg_temp = region_data %>%
group_by(date) %>%  # Group by date
# Calculate average max temperature for the region
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Count the number of days with average temperature above 32°C per year-month for the region
region_days_above_32C = region_avg_temp %>%
mutate(year_month = format(date, "%Y-%m")) %>% # Create a year-month column
filter(avg_temp > 32) %>% # Filter for temperatures above 32°C
group_by(year_month) %>% # Group by year-month
summarise(days_above_32C = n()) %>% # Count the days
# Add columns for the year and month
mutate(year = as.numeric(substring(year_month, 1, 4)),
month = as.numeric(substring(year_month, 6, 7)))
# Perform regression for the region
model_region = feols(days_above_32C ~ year | month,
data = region_days_above_32C)
# Return the region name and model
return(list(region = reg, model = model_region))
})
# Display results by region
results_by_region
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_results = lapply(unique(temperature_states$region), function(reg) {
# Filter the data for the specific region
region_data = temperature_states %>%
filter(region == reg)  # Keep only the rows for the current region
# Calculate the average daily temperature for the region
region_avg_temp = region_data %>%
group_by(date) %>%  # Group by date
# Calculate average max temperature for the region
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Count the number of days with average temperature above 32°C per year-month for the region
region_days_above_32C = region_avg_temp %>%
mutate(year_month = format(date, "%Y-%m")) %>% # Create a year-month column
filter(avg_temp > 32) %>% # Filter for temperatures above 32°C
group_by(year_month) %>% # Group by year-month
summarise(days_above_32C = n()) %>% # Count the days
# Add columns for the year and month
mutate(year = as.numeric(substring(year_month, 1, 4)),
month = as.numeric(substring(year_month, 6, 7)))
# Perform regression for the region
model_region = feols(days_above_32C ~ year | month,
data = region_days_above_32C)
# Return the region name and model
return(list(region = reg, model = model_region))
})
# Display results by region
regional_results
# Loading needed packages
pacman::p_load(
tidyverse,
fixest
)
# Importing the database
temperature_states = readRDS(here("problem_sets/data", "temperature_states.Rds"))
# Calculate daily average temperature across grid points
daily_avg_tmax <- temperature_states %>%
group_by(date) %>%
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE))
# Add month and year columns
daily_avg_tmax <- daily_avg_tmax %>%
mutate(year = format(date, "%Y"),
month = format(date, "%m"),
year_month = paste(year, month, sep = "-"))
# Count the number of days with average temperature exceeding 32C
days_above_32 <- daily_avg_tmax %>%
filter(avg_temp > 32) %>%
group_by(year_month) %>%
summarise(days_above_32 = n())
# Regress the number of days above 32C on the year with month fixed effects
regression_model <- feols(days_above_32 ~ 1 | year_month, data = days_above_32)
summary(regression_model)
# Repeat for each region
regional_results <- lapply(unique(temperature_states$region), function(reg) {
# Filter data for the specific region and calculate necessary metrics in one go
region_days_above_32C <- temperature_states %>%
filter(region == reg) %>%  # Filter for the current region
group_by(date) %>%  # Group by date
summarise(avg_temp = mean(mean_tmax, na.rm = TRUE), .groups = "drop") %>%  # Average max temperature
mutate(year_month = format(date, "%Y-%m")) %>%  # Create a year-month column
filter(avg_temp > 32) %>%  # Filter for temperatures above 32°C
group_by(year_month) %>%  # Group by year-month
summarise(days_above_32C = n(),  # Count the days
year = as.numeric(substring(year_month, 1, 4)),
month = as.numeric(substring(year_month, 6, 7)), .groups = "drop")
model_region = feols(days_above_32C ~ year | month,
data = region_days_above_32C)
return(list(region = reg, model = model_region))
})
# Display results by region
regional_results
