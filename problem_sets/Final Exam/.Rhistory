library(purrr)
# Set parameters
set.seed(13)
policy_effects <- list()
# Loop over datasets (100 datasets of size 1000)
for (i in 1:100) {
# Extract dataset
data <- datasets_1000[[i]]
# Bottom quartile households
income_cutoff <- quantile(data[, 2], 0.25)
bottom_quartile <- data[data[, 2] <= income_cutoff, ]
# Randomly assign treatment (50 treated datasets, 50 control datasets)
treat_flag <- sample(c(0, 1), size = 1)
if (treat_flag == 1) {
bottom_quartile[, 2] <- bottom_quartile[, 2] * 1.2
# Calculate new school attendance decisions with treatment
e_0 <- revd(nrow(bottom_quartile), location = 0, scale = 1)
e_1 <- revd(nrow(bottom_quartile), location = 0, scale = 1)
u_treat <- alfa_0 + alfa_1 * bottom_quartile[, 2] + (e_1 - e_0)
d_treat <- as.numeric(u_treat >= 0)
# Store within-household treatment effect
data$treat_decision <- d_treat
within_effect <- mean(d_treat - bottom_quartile[, 1], na.rm = TRUE)
} else {
within_effect <- NA
}
# Separate treated and untreated groups for between-household effect
treated_group <- datasets_1000[[i]] %>% filter(Treati == 1)
untreated_group <- datasets_1000[[i]] %>% filter(Treati == 0)
if (nrow(treated_group) > 0 && nrow(untreated_group) > 0) {
# Calculate average attendance in treated and untreated groups
avg_treated_attendance <- mean(treated_group[, 1], na.rm = TRUE)
avg_untreated_attendance <- mean(untreated_group[, 1], na.rm = TRUE)
# Between-household treatment effect
between_effect <- avg_treated_attendance - avg_untreated_attendance
} else {
between_effect <- NA
}
# Store results
policy_effects[[i]] <- list(
within_effect = within_effect,
between_effect = between_effect
)
}
# Set parameters
set.seed(13)
policy_effects <- list()
# Loop over datasets (100 datasets of size 1000)
for (i in 1:100) {
# Extract dataset
data <- datasets_1000[[i]]
# Bottom quartile households
income_cutoff <- quantile(data[, 2], 0.25)
bottom_quartile <- data[data[, 2] <= income_cutoff, ]
# Randomly assign treatment (50 treated datasets, 50 control datasets)
treat_flag <- sample(c(0, 1), size = 1)
if (treat_flag == 1) {
bottom_quartile[, 2] <- bottom_quartile[, 2] * 1.2
# Calculate new school attendance decisions with treatment
e_0 <- revd(nrow(bottom_quartile), location = 0, scale = 1)
e_1 <- revd(nrow(bottom_quartile), location = 0, scale = 1)
u_treat <- alfa_0 + alfa_1 * bottom_quartile[, 2] + (e_1 - e_0)
d_treat <- as.numeric(u_treat >= 0)
# Store within-household treatment effect
data$treat_decision <- d_treat
within_effect <- mean(d_treat - bottom_quartile[, 1], na.rm = TRUE)
} else {
within_effect <- NA
}
# Separate treated and untreated groups for between-household effect
treated_group <- datasets_1000[[i]] %>% filter(Treati == 1)
untreated_group <- datasets_1000[[i]] %>% filter(Treati == 0)
if (nrow(treated_group) > 0 && nrow(untreated_group) > 0) {
# Calculate average attendance in treated and untreated groups
avg_treated_attendance <- mean(treated_group[, 1], na.rm = TRUE)
avg_untreated_attendance <- mean(untreated_group[, 1], na.rm = TRUE)
# Between-household treatment effect
between_effect <- avg_treated_attendance - avg_untreated_attendance
} else {
between_effect <- NA
}
# Store results
policy_effects[[i]] <- list(
within_effect = within_effect,
between_effect = between_effect
)
}
delta <- 0.2
set.seed(42)
# Prepare treated and untreated datasets
policy_effect <- function(datasets_1000, delta) {
within_effects <- c()
between_effects <- c()
for (i in 1:100) {
# Get the dataset
data <- datasets_1000[[i]]
colnames(data) <- c("d", "x", "e_0", "e_1")
# Convert to data.frame for manipulation
data <- as.data.frame(data)
# Partition into bottom quartile
bottom_quartile_threshold <- quantile(data$x, 0.25)
bottom_quartile_df <- data[data$x <= bottom_quartile_threshold, ]
# Randomly assign treatment
bottom_quartile_df$Treat <- sample(c(0, 1), nrow(bottom_quartile_df), replace = TRUE)
# Calculate within-household treatment effect (Treat = 1)
treated_obs <- bottom_quartile_df[bottom_quartile_df$Treat == 1, ]
treated_obs$x_new <- treated_obs$x * (1 + delta)
# Compute decisions after and before treatment
treated_obs$d_after <- (alfa_0 + alfa_1 * treated_obs$x_new + (treated_obs$e_1 - treated_obs$e_0)) >= 0
treated_obs$d_before <- treated_obs$d
# Compute within-household treatment effect
within_effect <- mean(treated_obs$d_after) - mean(treated_obs$d_before)
within_effects <- c(within_effects, within_effect)
# Compute between-household treatment effect
treated_mean <- mean(bottom_quartile_df[bottom_quartile_df$Treat == 1, "d"], na.rm = TRUE)
untreated_mean <- mean(bottom_quartile_df[bottom_quartile_df$Treat == 0, "d"], na.rm = TRUE)
if (!is.na(treated_mean) && !is.na(untreated_mean)) {
between_effect <- treated_mean - untreated_mean
between_effects <- c(between_effects, between_effect)
}
}
# Results
list(
Average_Within_Household_Effect = mean(within_effects, na.rm = TRUE),
Average_Between_Household_Effect = mean(between_effects, na.rm = TRUE)
)
}
# Run the policy experiment
policy_results <- policy_effect(datasets_1000, delta)
# Define the function for the policy experiment
policy_effect <- function(datasets, delta) {
within_effects <- c()
between_effects <- c()
for (i in seq_along(datasets)) {
# Ensure dataset is a data frame
data <- as.data.frame(datasets[[i]])
colnames(data) <- c("d", "x")  # Assign consistent column names
# Identify bottom quartile of income (x)
quartile_cutoff <- quantile(data$x, 0.25)
bottom_quartile <- data %>% filter(x <= quartile_cutoff)
# Randomly assign treatment (50% of datasets)
set.seed(i)  # Ensure reproducibility
bottom_quartile <- bottom_quartile %>% mutate(Treat = sample(c(0, 1), n(), replace = TRUE))
# Apply treatment effect for treated households
treated <- bottom_quartile %>% filter(Treat == 1) %>% mutate(x_treated = x * (1 + delta))
# Calculate within-household effect for treated households
treated <- treated %>%
mutate(
d_original = if_else(alfa_0 + alfa_1 * x >= 0, 1, 0),
d_treated = if_else(alfa_0 + alfa_1 * x_treated >= 0, 1, 0)
)
within_effect <- mean(treated$d_treated - treated$d_original, na.rm = TRUE)
within_effects <- c(within_effects, within_effect)
# Calculate between-household effect (treated vs. non-treated households)
control <- bottom_quartile %>% filter(Treat == 0)
if (nrow(treated) > 0 & nrow(control) > 0) {
mean_treated <- mean(treated$d_treated, na.rm = TRUE)
mean_control <- mean(control$d, na.rm = TRUE)
between_effect <- mean_treated - mean_control
} else {
between_effect <- NA
}
between_effects <- c(between_effects, between_effect)
}
# Return average effects
list(
Average_Within_Household_Effect = mean(within_effects, na.rm = TRUE),
Average_Between_Household_Effect = mean(between_effects, na.rm = TRUE)
)
}
# Run the policy experiment
set.seed(13)
delta <- 0.2
policy_results <- policy_effect(datasets_1000, delta)
# Display results
policy_results
# Define the function for the policy experiment
policy_effect <- function(datasets, delta) {
within_effects <- c()
between_effects <- c()
for (i in seq_along(datasets)) {
# Ensure dataset is a data frame
data <- as.data.frame(datasets[[i]])
colnames(data) <- c("d", "x")  # Assign consistent column names
# Identify bottom quartile of income (x)
quartile_cutoff <- quantile(data$x, 0.25)
bottom_quartile <- data %>% filter(x <= quartile_cutoff)
# Randomly assign treatment (50% of datasets)
set.seed(i)  # Ensure reproducibility
bottom_quartile <- bottom_quartile %>% mutate(Treat = sample(c(0, 1), n(), replace = TRUE))
# Apply treatment effect for treated households
treated <- bottom_quartile %>% filter(Treat == 1) %>% mutate(x_treated = x * (1 + delta))
# Calculate within-household effect for treated households
treated <- treated %>%
mutate(
d_original = if_else(beta_0 + beta_1 * x >= 0, 1, 0),
d_treated = if_else(beta_0 + beta_1 * x_treated >= 0, 1, 0)
)
within_effect <- mean(treated$d_treated - treated$d_original, na.rm = TRUE)
within_effects <- c(within_effects, within_effect)
# Calculate between-household effect (treated vs. non-treated households)
control <- bottom_quartile %>% filter(Treat == 0)
if (nrow(treated) > 0 & nrow(control) > 0) {
mean_treated <- mean(treated$d_treated, na.rm = TRUE)
mean_control <- mean(control$d, na.rm = TRUE)
between_effect <- mean_treated - mean_control
} else {
between_effect <- NA
}
between_effects <- c(between_effects, between_effect)
}
# Return average effects
list(
Average_Within_Household_Effect = mean(within_effects, na.rm = TRUE),
Average_Between_Household_Effect = mean(between_effects, na.rm = TRUE)
)
}
# Run the policy experiment
set.seed(13)
delta <- 0.2
policy_results <- policy_effect(datasets_1000, delta)
# Display results
policy_results
policy_effect <- function(datasets, delta) {
set.seed(123)
# Initialize storage for results
within_effects <- c()
between_effects <- c()
for (i in seq_along(datasets)) {
dataset <- datasets[[i]]
colnames(dataset) <- c("d", "x")
dataset <- as.data.frame(dataset)
# Calculate bottom quartile
quartile_cutoff <- quantile(dataset$x, 0.25)
bottom_quartile <- dataset %>% filter(x <= quartile_cutoff)
# Assign treatment groups
treated <- sample_n(bottom_quartile, size = nrow(bottom_quartile) / 2)
treated$Treat <- 1
treated$x_new <- treated$x * (1 + delta)
untreated <- anti_join(bottom_quartile, treated, by = c("d", "x"))
untreated$Treat <- 0
untreated$x_new <- untreated$x
# Within-household effect: Compare attendance before and after for treated households
treated$u_before <- alfa_0 + alfa_1 * treated$x + revd(nrow(treated), location = 0, scale = 1)
treated$u_after <- alfa_0 + alfa_1 * treated$x_new + revd(nrow(treated), location = 0, scale = 1)
treated$d_before <- ifelse(treated$u_before >= 0, 1, 0)
treated$d_after <- ifelse(treated$u_after >= 0, 1, 0)
within_effect <- mean(treated$d_after - treated$d_before)
within_effects <- c(within_effects, within_effect)
# Between-household effect: Compare treated vs untreated school attendance
treated$u_treated <- alfa_0 + alfa_1 * treated$x_new + revd(nrow(treated), location = 0, scale = 1)
untreated$u_untreated <- alfa_0 + alfa_1 * untreated$x + revd(nrow(untreated), location = 0, scale = 1)
treated$d_treated <- ifelse(treated$u_treated >= 0, 1, 0)
untreated$d_untreated <- ifelse(untreated$u_untreated >= 0, 1, 0)
between_effect <- mean(treated$d_treated) - mean(untreated$d_untreated)
between_effects <- c(between_effects, between_effect)
}
# Aggregate results
results <- list(
Average_Within_Household_Effect = mean(within_effects, na.rm = TRUE),
Average_Between_Household_Effect = mean(between_effects, na.rm = TRUE)
)
return(results)
}
# Run the function with updated datasets
policy_results <- policy_effect(datasets_1000, delta)
policy_results
delta <- 0.2
policy_effect <- function(datasets, delta) {
within_effects <- numeric()
between_effects <- numeric()
for (data in datasets) {
# Bottom Quartile
cutoff <- quantile(data$x, 0.25)
bottom_quartile <- filter(data, x <= cutoff)
# Random Assignment
treated_indices <- sample(1:nrow(bottom_quartile), size = nrow(bottom_quartile) / 2)
bottom_quartile$treated <- 0
bottom_quartile$treated[treated_indices] <- 1
# Apply Policy
bottom_quartile <- bottom_quartile %>%
mutate(
x_after = ifelse(treated == 1, x * (1 + delta), x),
u_before = alfa_0 + alfa_1 * x,
u_after = alfa_0 + alfa_1 * x_after,
d_before = as.numeric(u_before >= 0),
d_after = as.numeric(u_after >= 0)
)
# Within-Household Effect
treated <- filter(bottom_quartile, treated == 1)
within_effect <- mean(treated$d_after - treated$d_before, na.rm = TRUE)
within_effects <- c(within_effects, within_effect)
# Between-Household Effect
treated_mean <- mean(filter(bottom_quartile, treated == 1)$d_after, na.rm = TRUE)
untreated_mean <- mean(filter(bottom_quartile, treated == 0)$d_before, na.rm = TRUE)
between_effect <- treated_mean - untreated_mean
between_effects <- c(between_effects, between_effect)
}
list(
Average_Within_Household_Effect = mean(within_effects, na.rm = TRUE),
Average_Between_Household_Effect = mean(between_effects, na.rm = TRUE)
)
}
# Run Policy Effect
policy_results <- policy_effect(datasets_1000, delta)
# Counterfactual Policy Experiment
policy_experiment <- function(datasets, delta) {
within_effects <- numeric(length(datasets))
between_effects <- numeric(length(datasets))
for (i in seq_along(datasets)) {
dataset <- datasets[[i]]
# Identify the bottom quartile based on income
income_threshold <- quantile(dataset[, "x"], 0.25)
bottom_quartile <- dataset[dataset[, "x"] <= income_threshold, ]
# Separate treated and control groups
set.seed(i)  # Ensure reproducibility of random assignment
treated_indices <- sample(seq_len(nrow(bottom_quartile)), nrow(bottom_quartile) / 2)
treated_data <- bottom_quartile[treated_indices, , drop = FALSE]
control_data <- bottom_quartile[-treated_indices, , drop = FALSE]
# Apply treatment: Increase income by delta for treated group
treated_data[, "x_treated"] <- treated_data[, "x"] * (1 + delta)
# Calculate decision vectors before and after treatment for treated households
treated_data[, "d_pre"] <- with(treated_data, ifelse(0.8 + 0.7 * x >= 0, 1, 0))
treated_data[, "d_post"] <- with(treated_data, ifelse(0.8 + 0.7 * x_treated >= 0, 1, 0))
# Compute within-household treatment effect
within_effects[i] <- mean(treated_data[, "d_post"] - treated_data[, "d_pre"])
# Calculate average school attendance for treated and control groups
d_treated <- mean(treated_data[, "d_post"])
d_control <- mean(control_data[, "d"])
# Compute between-household treatment effect
between_effects[i] <- d_treated - d_control
}
# Return average effects across datasets
return(list(
Average_Within_Household_Effect = mean(within_effects),
Average_Between_Household_Effect = mean(between_effects)
))
}
# Example usage:
delta <- 0.20
policy_results <- policy_experiment(datasets_1000, delta)
policy_experiment <- function(datasets, delta) {
within_effects <- c()
between_effects <- c()
for (dataset in datasets) {
# Select bottom quartile
x <- dataset[, "x"]
d <- dataset[, "d"]
threshold <- quantile(x, 0.25)
bottom_quartile <- dataset[x <= threshold, , drop = FALSE]
# Randomly assign treatment
set.seed(123)  # For reproducibility
treat_indicator <- sample(c(1, 0), size = nrow(bottom_quartile), replace = TRUE)
bottom_quartile <- cbind(bottom_quartile, Treati = treat_indicator)
# Apply treatment effect
bottom_quartile$x_treated <- bottom_quartile[, "x"]
bottom_quartile$x_treated[bottom_quartile[, "Treati"] == 1] <-
bottom_quartile$x_treated[bottom_quartile[, "Treati"] == 1] * (1 + delta)
# Within-household effect
treated_data <- bottom_quartile[bottom_quartile[, "Treati"] == 1, ]
treated_decision <- alfa_0 + alfa_1 * treated_data$x_treated
treated_decision <- ifelse(treated_decision >= 0, 1, 0)
within_effect <- mean(treated_decision) - mean(treated_data[, "d"])
within_effects <- c(within_effects, within_effect)
# Between-household effect
untreated_data <- bottom_quartile[bottom_quartile[, "Treati"] == 0, ]
untreated_decision <- mean(untreated_data[, "d"])
between_effect <- mean(treated_decision) - untreated_decision
between_effects <- c(between_effects, between_effect)
}
# Results
list(
Average_Within_Household_Effect = mean(within_effects, na.rm = TRUE),
Average_Between_Household_Effect = mean(between_effects, na.rm = TRUE)
)
}
delta <- 0.2
num_datasets <- 100
treatment_datasets <- sample(1:num_datasets, 50) # Randomly select 50 datasets for treatment
# Initialize results
within_effects <- numeric(length = 50)
between_effects <- numeric(length = num_datasets)
# Loop through datasets
for (i in 1:num_datasets) {
data <- datasets_1000[[i]]
# Keep only bottom quartile of income
bottom_quartile <- data[data[, 2] <= quantile(data[, 2], 0.25), ]
x <- bottom_quartile[, 2]
d <- bottom_quartile[, 1]
if (i %in% treatment_datasets) {
# Treatment group: Apply income increase
x_treated <- x * (1 + delta)
# Simulate school attendance decisions with updated income
u_treated <- alfa_0 + alfa_1 * x_treated
d_treated <- ifelse(u_treated >= 0, 1, 0)
# Compute within-household treatment effect
u_original <- alfa_0 + alfa_1 * x
d_original <- ifelse(u_original >= 0, 1, 0)
within_effects[i] <- mean(d_treated) - mean(d_original)
} else {
d_treated <- d # No change for control group
}
# Compute between-household treatment effect
between_effects[i] <- mean(d_treated) - mean(d)
}
# Summarize results
within_effect_mean <- mean(within_effects, na.rm = TRUE)
between_effect_mean <- mean(between_effects, na.rm = TRUE)
cat("Average Within-Household Treatment Effect:", within_effect_mean, "\n")
cat("Average Between-Household Treatment Effect:", between_effect_mean, "\n")
View(datasets_1000)
delta <- 0.2
num_datasets <- 100
treatment_datasets <- sample(1:num_datasets, 50) # Randomly select 50 datasets for treatment
# Initialize results
within_effects <- numeric(length = 50)
between_effects <- numeric(length = num_datasets)
# Loop through datasets
for (i in 1:num_datasets) {
data <- datasets_1000[[i]]
# Keep only bottom quartile of income
bottom_quartile <- data[data[, 2] <= quantile(data[, 2], 0.25), ]
x <- bottom_quartile[, 2]
d <- bottom_quartile[, 1]
if (i %in% treatment_datasets) {
# Treatment group: Apply income increase
x_treated <- x * (1 + delta)
# Simulate school attendance decisions with updated income
u_treated <- alfa_0 + alfa_1 * x_treated
d_treated <- ifelse(u_treated >= 0, 1, 0)
# Compute within-household treatment effect
u_original <- alfa_0 + alfa_1 * x
d_original <- ifelse(u_original >= 0, 1, 0)
# Compute between-household treatment effect
between_effects[i] <- mean(d_treated) - mean(d)
}
between_effect_mean <- mean(between_effects, na.rm = TRUE)
cat("Average Between-Household Treatment Effect:", between_effect_mean, "\n")
delta <- 0.2
num_datasets <- 100
treatment_datasets <- sample(1:num_datasets, 50) # Randomly select 50 datasets for treatment
# Initialize results
within_effects <- numeric(length = 50)
between_effects <- numeric(length = num_datasets)
# Loop through datasets
for (i in 1:num_datasets) {
data <- datasets_1000[[i]]
bottom_quartile <- data[data[, 2] <= quantile(data[, 2], 0.25), ]
x <- bottom_quartile[, 2]
d <- bottom_quartile[, 1]
if (i %in% treatment_datasets) {
x_treated <- x * (1 + delta)
u_treated <- alfa_0 + alfa_1 * x_treated
d_treated <- ifelse(u_treated >= 0, 1, 0)
between_effects[i] <- mean(d_treated) - mean(d)
}
between_effect_mean <- mean(between_effects, na.rm = TRUE)
cat("Average Between-Household Treatment Effect:", between_effect_mean, "\n")
View(data)
View(data_alfa1000_30)
View(data_beta1000_30)
View(ppe)
View(bottom_quartile_datasets)
View(data)
delta <- 0.2
data <- datasets_1000
treatment_datasets <- sample(data, 50)
x_control <- treatment_datasets
x_treated <- treatment_datasets[, 2] * (1 + delta)
delta <- 0.2
num_datasets <- 100
treatment_datasets <- sample(1:num_datasets, 50)
within_effects <- numeric(length = 50)
between_effects <- numeric(length = num_datasets)
for (i in 1:num_datasets) {
data <- datasets_1000[[i]]
bottom_quartile <- data[data[, 2] <= quantile(data[, 2], 0.25), ]
x <- bottom_quartile[, 2]
d <- bottom_quartile[, 1]
if (i %in% treatment_datasets) {
x_treated <- x * (1 + delta)
u_treated <- alfa_0 + alfa_1 * x_treated
d_treated <- ifelse(u_treated >= 0, 1, 0)
u_original <- alfa_0 + alfa_1 * x
d_original <- ifelse(u_original >= 0, 1, 0)
within_effects[i] <- mean(d_treated) - mean(d_original)
} else {
d_treated <- d
}
between_effects[i] <- mean(d_treated) - mean(d)
}
pacman::p_load(purrr,
EnvStats,
dplyr)
beta_0 <- 0.5
beta_1 <- 0.4
mi = log(25/(sqrt(25+3)))
sigma = log(1+(3/25))
set.seed(123)
#Creating a hundred 500 size and 1000 size sample data sets:
dataset <- function(N){
x <- rlnorm(N, meanlog = mi, sdlog = sqrt(sigma))
e_0 <- revd(N, location = 0, scale = 1)
e_1 <- revd(N, location = 0, scale = 1)
u <- beta_0 + beta_1*x + (e_1-e_0)
d <- 1*(u >= 0)
ds <- matrix(data = c(d, x), nrow = N, ncol = 2)
}
N500 <- rep(500, 100)
datasets_500 <- map(N500, dataset)
N1000 <- rep(1000, 100)
datasets_1000 <- map(N1000, dataset)
